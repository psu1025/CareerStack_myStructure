//
    Created by Augustus on 14. 5. 0.
doctype html
html
    head
        meta(http-equiv="Content-Type" content="text/html; charset=UTF-8")
        title= title
        link(rel='stylesheet', href='/stylesheets/editCareer.css')
        script(src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js")
        script(src='/javascripts/jquery.serialize-object.min.js')
        script(src='/javascripts/bootstrap.min.js')
        script(src='/javascripts/jquery-ui-1.10.4.custom.min.js')

        link(rel='stylesheet', href='/stylesheets/jquery-ui-1.10.4.custom.min.css')
        link(rel='stylesheet', href='/stylesheets/bootstrap.min.css')
        link(rel='stylesheet', href='/stylesheets/bootstrap-theme.min.css')

        script(src="/javascripts/jquery.ui.widget.js")
        script(src="/javascripts/jquery.fileupload.js")

        script(src='/javascripts/nicEdit.js')
        script(src='/javascripts/moment.js')
        script(src='/javascripts/pikaday.js')
        link(rel='stylesheet', href='/stylesheets/pikaday.css')

        script(type='text/javascript').
            WebFontConfig = {
            custom: {
                families: ['Nanum Gothic'],
                urls: ['http://fonts.googleapis.com/earlyaccess/nanumgothic.css']
            }
            };
            (function() {
                var wf = document.createElement('script');
                wf.src = ('https:' == document.location.protocol ? 'https' : 'http') +
                    '://ajax.googleapis.com/ajax/libs/webfont/1.4.10/webfont.js';
                wf.type = 'text/javascript';
                wf.async = 'true';
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(wf, s);
            })();
        script(type='text/javascript').
            function getElementCounter(){
                var count = Number($('#templateCounter').val());
                count++;
                $('#templateCounter').val(count);
                return count
            }

            function getElementCounterOnly(){
                var count = Number($('#templateCounter').val());
                return count;
            }
        script(type='text/javascript').
            function templateHtml(type){
                var html = "";
                if(type == 'memo'){
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="memo"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div><div id="templateItem" class="form-group"><label class="control-label">자유 내용 입력</label><input id="templateItemInput' + count + '" class="form-control" type="text" name="templates[' + count + '][attribute][memo]" placeholder="자유 내용 입력"></input></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" value="123123" onclick="addTemplate(this);return false;">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }
                else if(type == 'text'){
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="text"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div><div id="templateItem" class="form-group"><label class="control-label">자유 내용 입력</label><textarea id="templateItemInput' + count + '" class="form-control textAreaWithTextEditor" name="templates[' + count + '][attribute][text]" rows="10"></textarea></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" value="123123" onclick="addTemplate(this);return false;">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }
                else if(type == 'link'){
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="link"></input><input id="templateName" class="form-control" type="text" placeholder="템플릿 이름을 입력하세요" name="templates[' + count + '][name]"></input></div><div id="templateItem" class="form-group"><label class="control-label">링크 이름 입력</label><input class="form-control" id="templateItemInput' + count + '" type="text" placeholder="링크 이름 입력" name="templates[' + count + '][attribute][linkname]"></input></div><div id="templateItem" class="form-group"><label class="control-label">링크 주소 입력</label><input id="templateItemInput' + count +'" class="form-control" type="text" placeholder="링크 주소 입력" name="templates[' + count + '][attribute][link]"></input></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" onclick="addTemplate(this);return false;" value="123123">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div></div>';
                }
                else if(type == 'date'){
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="date"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div><div id="templateItem" class="form-group"><label class="control-label">날짜 입력</label><input id="templateItemInput' + count + '" class="form-control dateSelector" type="text" readonly="readonly" name="templates[' + count + '][attribute][date]" placeholder="Date"></input></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" onclick="addTemplate(this);return false;" value="123123">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }
                else if(type == 'period'){
                    var count = getElementCounter();
                    var nextCount = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="period"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div><div id="templateItem" class="form-group"><label class="control-label">시작 날짜 입력</label><input id="templateItemInput'+ count +'" class="form-control dateSelector" type="text" readonly="readonly" name="templates[' + count + '][attribute][startdate]" placeholder="Start Date"></input></div><div id="templateItem" class="form-group"><label class="control-label">끝 날짜 입력</label><input id="templateItemInput'+ nextCount +'" class="form-control dateSelector" type="text" readonly="readonly" name="templates[' + count + '][attribute][enddate]" placeholder="End Date"></input></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" value="123123" onclick="addTemplate(this);return false;">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }
                else if(type == 'image'){
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="image"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div><div id="templateItem" class="form-group"><label class="control-label">업로드 할 이미지 선택</label><input id="filePath" class="hiddenObject" type="text" name="templates[' + count + '][attribute][filepath]"></input><input id="uploadImage' + count +'" class="fontChange" type="file" accept="image/*" name="templates[' + count + '][attribute][fileInput]"></input><p class="help-block">png, jpg, gif만 업로드 하세요. 5메가 제한이 있습니다. 800x300 pixel 크기 제한이 걸립니다</p><script type="text/javascript">$(document).ready(function() {$("#uploadImage'+count+'").fileupload({url : "/upload",dataType: "json",add: function(e, data){var uploadFile = data.files[0];if (!(/png|jpe?g|gif/i).test(uploadFile.name)) {alert("png, jpg, gif 만 가능합니다");goUpload = false;return false;} else if (uploadFile.size > 5000000) { alert("파일 용량은 5메가를 초과할 수 없습니다.");return false;}data.submit();},done: function (e, data) {var code = data.textStatus;if(code == "success") {$("#uploadImage'+count+'").siblings("#filePath").val(data.result.files[0].name);var user_id = $("#userIdHidden").val();var fullFilePath = "/uploads/" + user_id + "/" + data.result.files[0].name;$("#uploadImage'+count+'").siblings("#imagePreviewWrapper").children("#imgPreview").attr("src", fullFilePath);} else {alert("알 수 없는 문제로 오류가 발생했습니다");}},fail: function(){alert("서버와 통신 중 문제가 발생했습니다");}});});</scr'+'ipt><div id="imagePreviewWrapper" class="form-group"><label class="control-label">이미지 프리뷰</label><img id="imgPreview"></img></div></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" value="123123" onclick="addTemplate(this);return false;">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }
                else if(type == 'file'){
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="file"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div><div id="templateItem" class="form-group"><label class="control-label">업로드 할 파일 선택</label><input id="uploadFile' + count +'" class="fontChange" type="file" accept="*" name="templates[' + count + '][attribute][fileInput]"></input><p class="help-block">20메가 제한이 있습니다.</p><script type="text/javascript">$(document).ready(function() {$("#uploadFile' + count +'").fileupload({url : "/upload",dataType: "json",add: function(e, data){var uploadFile = data.files[0];if (uploadFile.size > 20000000) {alert("파일 용량은 20메가를 초과할 수 없습니다.");return false;}data.submit();},done: function (e, data) {var code = data.textStatus;if(code == "success") {var filename = data.result.files[0].name;alert(filename + "성공적으로 업로드 되었습니다.");var user_id = $("#userIdHidden").val();var fullFilePath = "/uploads/" + user_id + "/" + data.result.files[0].name;var liItem = "<li><a href=\" + fullFilePath + \">" + filename + "</a></li>";$("#uploadFile' + count +'").siblings("#fileListWrapper").children("#fileListul").append(liItem);$("<input>").attr({type: "text",class: "hiddenObject",id: "templateType",name: "templates[' + count + '][attribute][filepath][]",value: filename}).appendTo($("#uploadFile' + count +'").siblings("#fileListWrapper"));} else {alert("알 수 없는 문제로 오류가 발생했습니다");}},fail: function(){alert("서버와 통신 중 문제가 발생했습니다");}});});</scr'+'ipt><div id="fileListWrapper" class="form-group"><label class="control-label">파일 리스트</label><ul id="fileListul"></ul></div></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" value="123123" onclick="addTemplate(this);return false;">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }
                else if(type == 'map'){
                    html = '';
                }
                else{
                    var count = getElementCounter();
                    html = '<div id="templateWrapper" class="fontChange"><div id="templateBodyWrapper"><div id="templateItem" class="form-group"><label class="control-label">이름 입력하기</label><input id="templateType" class="form-control hidden" type="text" name="templates[' + count + '][type]" value="none"></input><input id="templateName" class="form-control" type="text" name="templates[' + count + '][name]" placeholder="템플릿 이름을 입력하세요"></input></div></div><div id="configButtonWrapper" class="text-right btn-group"><span><button class="btn btn-default" value="123123" onclick="addTemplate(this);return false;">추가하기</button><button class="btn btn-default" onclick="delTemplateItem(this);return false;">삭제하기</button></span></div></div>';
                }

                return html;
            }
        script(type='text/javascript').
            function delTemplateItem(btnObject){
                $(btnObject).parents('#templateWrapper').remove();
            }
        script(type='text/javascript').
            function addTemplate(btnObject){
                $('#myModal')
                    .one('hide.bs.modal', function(){
                        //modal이 꺼진 후의 callback 함수
                        //selectTemplateHidden의 value대로 template을 추가하고, 값을 초기화한다
                        if($('#selectTemplateHidden').val() != ""){
                            $(btnObject).parents("#templateWrapper").after(function(){
                                return templateHtml($('#selectTemplateHidden').val());
                            });
                            //var htmlval = templateHtml($('#selectTemplateHidden').val());
                            //$(htmlval).appendTo($(btnObject).parents("#templateWrapper"));
                        }

                        if($('#selectTemplateHidden').val() == 'text'){
                            new nicEditor().panelInstance('templateItemInput' + $('#templateCounter').val());
                        }

                        $('#selectTemplateHidden').val("");
                    })
                    .modal();
            }

    body
        #wholeDiv
            #top
                #top_left
                    a(href='/view/mypage')
                        img(src='/resource/images/mypage/logo_small.png',id='toplogo')
                #top_right
                    span#welcomeText #{name}님, 환영합니다.
                    a(href='/view/career/selectTemplate')
                        img(src='/resource/images/mypage/write_career.png',id='write_career')
                    a(href='/view/setting')
                        img(src='/resource/images/mypage/config.png',id='config')
                    a(href='/api/logout')
                        img(src='/resource/images/mypage/logout.png',id='logout')
            #introduce
                #introduce_body.text-center
                    img(src='#{introduceUrl}')
                #introduce_fold.text-center
                    img.text-center.fold_img(src='/resource/images/mypage/fold_up.png', id='fold_img')
                    img.text-center.fold_img(src='/resource/images/mypage/fold_down.png', id='fold_img', style='display:none')
                #introduce_bottom
            #main
                #main_left
                    #menu_body
                        - if(categoryItems.length)
                            each item in categoryItems
                                a(href='/view/careerList/#{item.name}')
                                    #categoryItem.categoryUnselected.text-left
                                        span #{item.name}
                    #menu_edit
                #main_right
                    //-Mixin Declation
                    include mixins
                    //-Mixin Declation End
                    form#careerWriteForm(role="form")
                        #topMenu
                            #categoryTitle.text-left
                                span 포트폴리오 수정하기
                            #selectCategory.form-group
                                label(for="categorySelect") 카테고리 선택
                                select.form-control#categorySelect(name="category")
                                    each item in categoryItems
                                        if item.name == writeTemplates.category
                                            option(value="#{item.name}", selected="selected") #{item.name}
                                        else
                                            option(value="#{item.name}") #{item.name}

                            #careerName.form-group
                                label(for="careerTitle") 포트폴리오 이름
                                input.form-control#careerTitle(type="text", name="portfolioName", value="#{writeTemplates.name}")
                        #templates
                            - var addrIndex = 0
                            each template, index in writeTemplates.templateList
                                if(template.type == 'memo')
                                    mixin memoEdit(addrIndex, template.name, template.attribute.memo)
                                else if(template.type == 'text')
                                    mixin textEdit(addrIndex, template.name, template.attribute.text)
                                else if(template.type == 'link')
                                    mixin linkEdit(addrIndex, template.name, template.attribute.linkname, template.attribute.link)
                                else if(template.type == 'date')
                                    mixin dateEdit(addrIndex, template.name, template.attribute.date)
                                else if(template.type == 'period')
                                    mixin periodEdit(addrIndex, template.name, addrIndex+1, template.attribute.startdate, template.attribute.enddate)
                                    - addrIndex +=1
                                else if(template.type == 'image')
                                    mixin imageEdit(addrIndex, template.name, user_id, template.attribute.filepath)
                                else if(template.type == 'file')
                                    mixin fileEdit(addrIndex, template.name, user_id, template.attribute.filepath)

                                - addrIndex += 1


                        #uploadCareer.text-center.fontChange
                            input#selectTemplateHidden.hiddenObject(type='text')
                            input#userIdHidden.hiddenObject(type='text', value='#{user_id}')
                            input#careerIdHidden.hiddenObject(type='text', value='#{career_id}')
                            input#templateCounter.hiddenObject(type='text', value='#{writeTemplates.templateList.length}')
                            button.btn.btn-primary.btn-lg(type="submit") 수정 완료


                #myModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
                    .modal-dialog
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal', aria-hidden='true')
                                h4.fontChange.modal-title 추가할 템플릿 선택하기
                            .modal-body.fontChange
                                p.fontChange.text-primary 모든 템플릿에는 이름이 반드시 포함됩니다(작성필수)
                                .radio
                                    label
                                        input#templateRadio(type="radio" value="memo" name="selectTemplate")
                                        p.lead.marginZero 한 줄 메모를 남길 수 있는 템플릿
                                        small 한 줄 텍스트
                                .radio
                                    label
                                        input#templateRadio(type="radio" value="text" name="selectTemplate")
                                        p.lead 긴 글을 입력할 수 있는 템플릿
                                        small 텍스트 데이터를 포함한 리치 텍스트

                                .radio
                                    label
                                        input#templateRadio(type="radio" value="link" name="selectTemplate")
                                        p.lead 링크를 입력할 수 있는 템플릿
                                        small 링크를 걸 링크 이름, 링크 주소(http://를 붙여주세요)

                                .radio
                                    label
                                        input#templateRadio(type="radio" value="date" name="selectTemplate")
                                        p.lead 날짜를 입력할 수 있는 템플릿
                                        small 하나의 datepicker

                                .radio
                                    label
                                        input#templateRadio(type="radio" value="period" name="selectTemplate")
                                        p.lead 기간을 입력할 수 있는 템플릿
                                        small 시작 날짜와 끝 날짜를 선택할 수 있는 두 개의 datepicker

                                .radio
                                    label
                                        input#templateRadio(type="radio" value="image" name="selectTemplate")
                                        p.lead 사진을 올릴 수 있는 템플릿
                                        small 사진을 업로드 할 수 있는 다이얼로그, 미리보기(800x300)

                                .radio
                                    label
                                        input#templateRadio(type="radio" value="file" name="selectTemplate")
                                        p.lead 파일을 올릴 수 있는 템플릿
                                        small 파일을 업로드 할 수 있는 다이얼로그

                                .radio
                                    label
                                        input#templateRadio(type="radio" value="map" name="selectTemplate")
                                        p.lead 지도를 입력할 수 있는 템플릿
                                        small 위치를 검색할 수 있는 텍스트 창, 지도 캔버스

                            .modal-footer.fontChange
                                button.btn.btn-default(type='button', data-dismiss='modal') 취소
                                button.btn.btn-primary#modalSubmitBtn(type='button') 적용하기

            #bottom.text-center
                span 개발자 - 박상욱, 디자이너 - 김광훈
    script(type='text/javascript').
        $('#introduce_fold').click(function(){
            $('#introduce_body').slideToggle("slow", "easeOutQuint", function(){$('.fold_img').toggle();});
        });
    script(type='text/javascript').
        $('#modalSubmitBtn').click(function(){
            var checkedTemplate = "";

            if($(':radio[name="selectTemplate"]:checked').length < 1){
                alert('템플릿을 선택해주세요');
                event.preventDefault();
            }
            else{
                checkedTemplate = $(':radio[name="selectTemplate"]:checked').val();

                if(checkedTemplate == "map"){
                    alert('죄송합니다 지도는 구현중입니다 ㅠㅠ');
                    event.preventDefault();
                }
                else{
                    $('#selectTemplateHidden').val(checkedTemplate);
                    $('#myModal').modal('hide')
                }
            }
        });

        $(function() {
            $('body').on('click','.dateSelector', function() {
                $(this).datepicker('destroy').datepicker({
                    showOn:'focus',
                    dateFormat: "yy-mm-dd",
                    changeMonth: true,
                    changeYear: true,
                    gotoCurrent: true,
                    maxDate: "+2m +1w"
                }).focus();
            });
        });

    script(type='text/javascript').
        bkLib.onDomLoaded(nicEditors.allTextAreas);

    script(type='text/javascript').
        $(document).ready(function() {
            $("#careerWriteForm").submit(function() { // intercepts the submit event
                var answer = confirm('수정하시겠습니까?');
                if(!answer){
                    return false;
                }

                $('#careerWriteForm').find('textarea').each(function(index, element){
                    var elementId = $(element).attr('id');
                    nicEditors.findEditor(elementId).saveContent();
                });

                $.ajax({ // make an AJAX request
                    type: "PUT",
                    url: "/api/career/" + $('#careerIdHidden').val(), // it's the URL of your component B
                    data: $("#careerWriteForm").serializeObject(), // serializes the form's elements
                    success: function(data)
                    {
                        if(data.result == 310){
                            alert('성공적으로 등록되었습니다')

                            //카테고리 메인으로 이동
                            window.location="/view/careerList/" + $('#categorySelect').val();
                        }
                        else if(data.result == 311){
                            alert('이미지 형식이 맞지 않습니다');
                        }
                        else if(data.result == 312){
                            alert('항목이 모두 채워지지 않았습니다\n사용하지 않는 항목은 삭제해 주십시오');
                        }
                        else if(data.result == 313){
                            alert('등록 에러가 발생했습니다. 다시 시도해 주세요\nCode:' + data.result);
                        }
                        else if(data.result == 314){
                            alert('템플릿이 하나도 없습니다. 다시 작성해 주세요');
                        }
                        else {
                            alert('알 수 없는 오류. 다시 시도해 주세요\nCode:' + data.result);
                        }
                    }
                });
                return false;
            });
        });